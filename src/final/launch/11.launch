<launch>
    <!-- 1. 启动MID360驱动 -->
    <include file="$(find livox_ros_driver2)/launch_ROS1/msg_MID360.launch"/>

    <!-- 2. 启动FAST-LIO2 -->
    <include file="$(find fast_lio)/launch/mapping_mid360.launch"/>

    <!-- 3. 启动OctoMap Server -->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen">
        <!-- 订阅FAST-LIO2输出的点云 -->
        <remap from="cloud_in" to="/cloud_registered"/>
        
        <!-- 基本参数 -->
        <param name="resolution" value="0.1"/>  <!-- 体素分辨率,可调整 -->
        <param name="frame_id" type="string" value="camera_init"/>  <!-- FAST-LIO2的全局坐标系 -->
        <param name="sensor_model/max_range" value="20.0"/>  <!-- 最大感知距离 -->
        
        <!-- 2D投影参数 -->
        <param name="pointcloud_min_z" value="0.1"/>  <!-- 投影高度下限 -->
        <param name="pointcloud_max_z" value="2.0"/>   <!-- 投影高度上限 -->
        <param name="occupancy_min_z" value="0.0"/>
        <param name="occupancy_max_z" value="2.5"/>
        
        <!-- 地图发布 -->
        <param name="latch" value="true"/>  <!-- 锁存地图话题 -->
        <param name="filter_ground" value="false"/>  <!-- 是否滤除地面 -->
    </node>

    <!-- 4. 点云转2D LaserScan (给AMCL用) -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/cloud_registered"/>
        <remap from="scan" to="/scan"/>
        
        <param name="target_frame" value="camera_init"/>  <!-- 或你的base_link -->
        <param name="transform_tolerance" value="0.01"/>
        <param name="min_height" value="0.0"/>
        <param name="max_height" value="2.0"/>
        <param name="angle_min" value="-3.14159"/>
        <param name="angle_max" value="3.14159"/>
        <param name="angle_increment" value="0.0087"/>  <!-- 约0.5度 -->
        <param name="scan_time" value="0.1"/>
        <param name="range_min" value="0.3"/>
        <param name="range_max" value="20.0"/>
        <param name="use_inf" value="true"/>
    </node>

    <!-- 5. 可选:发布静态TF (如果需要) -->
    <!-- FAST-LIO2通常自己维护TF树,但如果缺base_link可以加: -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_lidar" 
          args="0 0 0 0 0 0 1 base_link livox_frame"/> -->

</launch>